#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ SpellChecker Android APK
# –¢—Ä–µ–±—É–µ—Ç –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—Å–º. BUILD_ANDROID.md)

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –°–ë–û–†–ö–ê SpellChecker Android APK"
echo "================================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if ! command -v python3 &> /dev/null; then
    print_error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+"
    exit 1
fi

python_version=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
print_success "Python –Ω–∞–π–¥–µ–Ω: $python_version"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Java
if ! command -v java &> /dev/null; then
    print_error "Java –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenJDK 8+"
    exit 1
fi

java_version=$(java -version 2>&1 | head -n 1)
print_success "Java –Ω–∞–π–¥–µ–Ω–∞: $java_version"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
if ! command -v git &> /dev/null; then
    print_error "Git –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git"
    exit 1
fi

print_success "Git –Ω–∞–π–¥–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ buildozer
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ buildozer..."
if ! command -v buildozer &> /dev/null; then
    print_warning "Buildozer –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
    pip3 install --user buildozer
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if ! command -v buildozer &> /dev/null; then
        export PATH="$PATH:$HOME/.local/bin"
        if ! command -v buildozer &> /dev/null; then
            print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å buildozer!"
            print_error "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: pip3 install --user buildozer"
            print_error "–ò –¥–æ–±–∞–≤—å—Ç–µ ~/.local/bin –≤ PATH"
            exit 1
        fi
    fi
fi

print_success "Buildozer –Ω–∞–π–¥–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."

required_files=("spellchecker_android.py" "buildozer.spec" "icon.png")
missing_files=()

for file in "${required_files[@]}"; do
    if [ ! -f "$file" ]; then
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -ne 0 ]; then
    print_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:"
    for file in "${missing_files[@]}"; do
        echo "  - $file"
    done
    exit 1
fi

print_success "–í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ main.py –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "main.py" ]; then
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ main.py..."
    ln -sf spellchecker_android.py main.py
    print_success "main.py —Å–æ–∑–¥–∞–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞/—Å–æ–∑–¥–∞–Ω–∏–µ requirements.txt
if [ ! -f "requirements.txt" ]; then
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ requirements.txt..."
    cat > requirements.txt << EOF
kivy>=2.1.0
kivymd>=1.1.0
requests>=2.25.0
EOF
    print_success "requirements.txt —Å–æ–∑–¥–∞–Ω"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ Java –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
if [ -z "$JAVA_HOME" ]; then
    if [ -d "/usr/lib/jvm/java-8-openjdk-amd64" ]; then
        export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"
    elif [ -d "/opt/homebrew/opt/openjdk@8" ]; then
        export JAVA_HOME="/opt/homebrew/opt/openjdk@8"
    elif [ -d "/usr/local/opt/openjdk@8" ]; then
        export JAVA_HOME="/usr/local/opt/openjdk@8"
    else
        print_warning "JAVA_HOME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        print_warning "–ï—Å–ª–∏ —Å–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞—Å—Ç—Å—è, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ JAVA_HOME –≤—Ä—É—á–Ω—É—é"
    fi
    
    if [ -n "$JAVA_HOME" ]; then
        print_success "JAVA_HOME —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $JAVA_HOME"
        export PATH="$PATH:$JAVA_HOME/bin"
    fi
fi

# –í–æ–ø—Ä–æ—Å –æ —Ç–∏–ø–µ —Å–±–æ—Ä–∫–∏
echo ""
echo "üîß –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–±–æ—Ä–∫–∏:"
echo "1) Debug (–±—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"
echo "2) Release (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è)"
echo "3) Clean + Debug (–æ—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞)"
echo ""

read -p "–í–∞—à –≤—ã–±–æ—Ä (1-3): " build_choice

case $build_choice in
    1)
        BUILD_TYPE="debug"
        ;;
    2)
        BUILD_TYPE="release"
        ;;
    3)
        BUILD_TYPE="clean_debug"
        ;;
    *)
        print_warning "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É—é debug"
        BUILD_TYPE="debug"
        ;;
esac

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –≤—Ä–µ–º–µ–Ω–∏ —Å–±–æ—Ä–∫–∏
echo ""
if [ ! -d ".buildozer" ]; then
    print_warning "‚è∞ –í–ù–ò–ú–ê–ù–ò–ï: –ü–µ—Ä–≤–∞—è —Å–±–æ—Ä–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 30-60 –º–∏–Ω—É—Ç!"
    print_warning "   Buildozer —Å–∫–∞—á–∞–µ—Ç Android SDK, NDK –∏ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    print_warning "   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
    print_warning "   –∏ ~10 –ì–ë —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        print_status "–°–±–æ—Ä–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
        exit 0
    fi
else
    print_status "–ù–∞–π–¥–µ–Ω –∫—ç—à buildozer, —Å–±–æ—Ä–∫–∞ –±—É–¥–µ—Ç –±—ã—Å—Ç—Ä–µ–µ"
fi

# –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏
echo ""
print_status "üöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ Android APK..."
print_status "–¢–∏–ø —Å–±–æ—Ä–∫–∏: $BUILD_TYPE"
echo ""

start_time=$(date +%s)

case $BUILD_TYPE in
    "debug")
        buildozer android debug
        ;;
    "release")
        buildozer android release
        ;;
    "clean_debug")
        print_status "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞..."
        buildozer android clean
        print_status "–ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏..."
        buildozer android debug
        ;;
esac

end_time=$(date +%s)
duration=$((end_time - start_time))
minutes=$((duration / 60))
seconds=$((duration % 60))

echo ""
print_success "üéâ –°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
print_success "‚è±Ô∏è  –í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏: ${minutes}–º ${seconds}—Å"
echo ""

# –ü–æ–∏—Å–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö APK —Ñ–∞–π–ª–æ–≤
print_status "üì± –ü–æ–∏—Å–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö APK —Ñ–∞–π–ª–æ–≤..."

if [ -d "bin" ]; then
    apk_files=(bin/*.apk)
    if [ -e "${apk_files[0]}" ]; then
        print_success "–ù–∞–π–¥–µ–Ω–Ω—ã–µ APK —Ñ–∞–π–ª—ã:"
        for apk in "${apk_files[@]}"; do
            size=$(du -h "$apk" | cut -f1)
            echo "  üì¶ $apk (—Ä–∞–∑–º–µ—Ä: $size)"
        done
        
        echo ""
        print_status "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
        echo "1. –í–∫–ª—é—á–∏—Ç–µ '–û—Ç–ª–∞–¥–∫–∞ –ø–æ USB' –Ω–∞ Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ"
        echo "2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ USB"
        echo "3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ APK:"
        echo "   adb install \"${apk_files[0]}\""
        echo ""
        echo "–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ APK –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑ —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä"
        
        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ ADB
        if command -v adb &> /dev/null; then
            echo ""
            read -p "ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å APK —á–µ—Ä–µ–∑ ADB —Å–µ–π—á–∞—Å? (y/N): " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ ADB..."
                if adb devices | grep -q "device$"; then
                    adb install -r "${apk_files[0]}"
                    print_success "APK —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ!"
                else
                    print_error "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ USB –∏ –æ—Ç–ª–∞–¥–∫—É"
                fi
            fi
        fi
        
    else
        print_error "APK —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ bin/"
    fi
else
    print_error "–ü–∞–ø–∫–∞ bin/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

echo ""
print_success "üéä –ì–æ—Ç–æ–≤–æ! SpellChecker Android APK —Å–æ–∑–¥–∞–Ω"
print_status "üìñ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: BUILD_ANDROID.md"
