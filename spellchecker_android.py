#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
SpellChecker Android App
–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø—Ä–æ—Å—Ç—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
"""

from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.scrollview import ScrollView
from kivy.uix.progressbar import ProgressBar
from kivy.clock import Clock
from kivy.metrics import dp
from kivy.core.window import Window

import requests
import threading
import json
from datetime import datetime


class SpellCheckerApp(App):
    def build(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–Ω–∞
        Window.clearcolor = (0.95, 0.95, 0.95, 1)
        
        # –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_layout = BoxLayout(
            orientation='vertical',
            padding=dp(15),
            spacing=dp(10)
        )
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = Label(
            text='üî§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏',
            font_size=dp(24),
            size_hint_y=None,
            height=dp(60),
            color=(0.2, 0.2, 0.2, 1),
            bold=True
        )
        main_layout.add_widget(title)
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle = Label(
            text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å –æ—à–∏–±–∫–∞–º–∏ - –ø–æ–ª—É—á–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç',
            font_size=dp(14),
            size_hint_y=None,
            height=dp(40),
            color=(0.5, 0.5, 0.5, 1)
        )
        main_layout.add_widget(subtitle)
        
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
        input_label = Label(
            text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:',
            font_size=dp(16),
            size_hint_y=None,
            height=dp(30),
            color=(0.3, 0.3, 0.3, 1),
            halign='left'
        )
        input_label.bind(size=input_label.setter('text_size'))
        main_layout.add_widget(input_label)
        
        self.text_input = TextInput(
            multiline=True,
            size_hint_y=None,
            height=dp(120),
            font_size=dp(16),
            hint_text='–ù–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–µ–≤–µ—Ç –∫–∞–∫ –¥–∏–ª–∞ —Ö–∞—Ä–æ—à–∏–π –¥–µ–Ω',
            background_color=(1, 1, 1, 1),
            foreground_color=(0.2, 0.2, 0.2, 1),
            cursor_color=(0.3, 0.6, 1, 1),
            padding=[dp(10), dp(10)]
        )
        main_layout.add_widget(self.text_input)
        
        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
        self.check_button = Button(
            text='üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é',
            size_hint_y=None,
            height=dp(50),
            font_size=dp(18),
            background_color=(0.3, 0.6, 1, 1),
            color=(1, 1, 1, 1),
            bold=True
        )
        self.check_button.bind(on_press=self.check_spelling)
        main_layout.add_widget(self.check_button)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress = ProgressBar(
            size_hint_y=None,
            height=dp(4),
            opacity=0
        )
        main_layout.add_widget(self.progress)
        
        # –°—Ç–∞—Ç—É—Å
        self.status_label = Label(
            text='–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ',
            font_size=dp(14),
            size_hint_y=None,
            height=dp(30),
            color=(0.5, 0.5, 0.5, 1)
        )
        main_layout.add_widget(self.status_label)
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        result_label = Label(
            text='–†–µ–∑—É–ª—å—Ç–∞—Ç:',  
            font_size=dp(16),
            size_hint_y=None,
            height=dp(30),
            color=(0.3, 0.3, 0.3, 1),
            halign='left'
        )
        result_label.bind(size=result_label.setter('text_size'))
        main_layout.add_widget(result_label)
        
        # –ü–æ–ª–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Å–∫—Ä–æ–ª–ª–µ
        scroll = ScrollView()
        
        self.result_label = Label(
            text='–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç...',
            font_size=dp(16),
            color=(0.2, 0.2, 0.2, 1),
            text_size=(None, None),  
            halign='left',
            valign='top',
            markup=True
        )
        scroll.add_widget(self.result_label)
        main_layout.add_widget(scroll)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        button_layout = BoxLayout(
            orientation='horizontal',
            size_hint_y=None,
            height=dp(40),
            spacing=dp(10)
        )
        
        clear_button = Button(
            text='üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å',
            background_color=(0.8, 0.4, 0.4, 1),
            color=(1, 1, 1, 1)
        )
        clear_button.bind(on_press=self.clear_text)
        
        copy_button = Button(
            text='üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å',
            background_color=(0.4, 0.8, 0.4, 1),
            color=(1, 1, 1, 1)
        )
        copy_button.bind(on_press=self.copy_result)
        
        button_layout.add_widget(clear_button)
        button_layout.add_widget(copy_button)
        main_layout.add_widget(button_layout)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
        self.session = requests.Session()
        self.session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Android 10; Mobile; rv:91.0) Gecko/91.0 Firefox/91.0'
        })
        
        self.last_corrected_text = ""
        
        return main_layout
    
    def check_spelling(self, instance):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏"""
        text = self.text_input.text.strip()
        
        if not text:
            self.show_status("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏", error=True)
            return
        
        # –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        self.check_button.disabled = True
        self.check_button.text = "‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é..."
        self.progress.opacity = 1
        self.show_status("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        thread = threading.Thread(target=self.spell_check_thread, args=(text,))
        thread.daemon = True
        thread.start()
    
    def spell_check_thread(self, text):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å.–°–ø–µ–ª–ª–µ—Ä
            corrected, errors_count, error = self.check_yandex_speller(text)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º UI –≤ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            Clock.schedule_once(
                lambda dt: self.on_spell_check_complete(text, corrected, errors_count, error),
                0
            )
            
        except Exception as e:
            Clock.schedule_once(
                lambda dt: self.on_spell_check_complete(text, text, 0, str(e)),
                0
            )
    
    def check_yandex_speller(self, text):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å.–°–ø–µ–ª–ª–µ—Ä"""
        try:
            url = "https://speller.yandex.net/services/spellservice.json/checkText"
            params = {'text': text, 'lang': 'ru', 'options': 0}
            
            response = self.session.get(url, params=params, timeout=15)
            response.raise_for_status()
            
            result = response.json()
            corrected_text = text
            errors_count = len(result)
            
            offset = 0
            for error in result:
                if 's' in error and error['s']:
                    pos = error['pos'] + offset
                    length = error['len']
                    suggestion = error['s'][0]
                    
                    corrected_text = (corrected_text[:pos] + 
                                    suggestion + 
                                    corrected_text[pos + length:])
                    
                    offset += len(suggestion) - length
            
            return corrected_text, errors_count, None
            
        except Exception as e:
            return text, 0, str(e)
    
    def on_spell_check_complete(self, original_text, corrected_text, errors_count, error):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        self.check_button.disabled = False
        self.check_button.text = "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é"
        self.progress.opacity = 0
        
        if error:
            self.show_status(f"‚ùå –û—à–∏–±–∫–∞: {error}", error=True)
            self.result_label.text = f"[color=#cc0000]‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:[/color]\n{error}\n\n[color=#666666]–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:[/color]\n{original_text}"
        
        elif errors_count > 0:
            self.show_status(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—à–∏–±–æ–∫: {errors_count}")
            self.result_label.text = (
                f"[color=#00aa00]‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:[/color]\n"
                f"[size=18]{corrected_text}[/size]\n\n"
                f"[color=#666666]–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:[/color]\n"
                f"[size=14]{original_text}[/size]\n\n"
                f"[color=#0066cc]üìä –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—à–∏–±–æ–∫: {errors_count}[/color]"
            )
            self.last_corrected_text = corrected_text
        
        else:
            self.show_status("‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            self.result_label.text = (
                f"[color=#00aa00]‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ![/color]\n\n"
                f"[color=#666666]–í–∞—à —Ç–µ–∫—Å—Ç:[/color]\n"
                f"[size=18]{original_text}[/size]"
            )
            self.last_corrected_text = original_text
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫
        self.result_label.text_size = (Window.width - dp(40), None)
    
    def show_status(self, message, error=False):
        """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞"""
        self.status_label.text = message
        if error:
            self.status_label.color = (0.8, 0.2, 0.2, 1)
        else:
            self.status_label.color = (0.2, 0.6, 0.2, 1)
    
    def clear_text(self, instance):
        """–û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π"""
        self.text_input.text = ""
        self.result_label.text = "–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç..."
        self.last_corrected_text = ""
        self.show_status("–ü–æ–ª—è –æ—á–∏—â–µ–Ω—ã")
    
    def copy_result(self, instance):
        """–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"""
        if self.last_corrected_text:
            try:
                # –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
                from kivy.core.clipboard import Clipboard
                Clipboard.copy(self.last_corrected_text)
                self.show_status("üìã –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞")
            except:
                self.show_status("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", error=True)
        else:
            self.show_status("‚ö†Ô∏è –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è", error=True)


if __name__ == '__main__':
    SpellCheckerApp().run()
